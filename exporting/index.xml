<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Exporting items on Better BibTeX for Zotero</title>
    <link>/zotero-better-bibtex/exporting/</link>
    <description>Recent content in Exporting items on Better BibTeX for Zotero</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language><atom:link href="/zotero-better-bibtex/exporting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automatic export</title>
      <link>/zotero-better-bibtex/exporting/auto/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/auto/</guid>
      <description>To export a library, group or collection, right-click on it in the left Zotero pane and choose &amp;ldquo;Export Library…&amp;rdquo; or &amp;ldquo;Export Collection…&amp;rdquo;. With BBT&amp;rsquo;s export translators (e.g., &amp;ldquo;Better BibTeX&amp;rdquo;), checking the Keep updated option will register the export for automation. After you’ve completed the current export, any changes to the collection or library will trigger an automatic re-export to update the file. You can review/remove exports from the BBT preferences. While I&amp;rsquo;ve gone to some lengths to make sure performance is OK, don&amp;rsquo;t go overboard with the number of auto-exports you have going.</description>
    </item>
    
    <item>
      <title>Markdown/Pandoc</title>
      <link>/zotero-better-bibtex/exporting/pandoc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/pandoc/</guid>
      <description>In addition to LaTeX, BBT plays very well with pandoc:
 you can drag and drop citations from Zotero into your markdown documents. you can cite as you write in your favorite editor with varying levels of comfort, mostly depending on how easy (VSCode, Sublime) or hard (looking at you Scrivener) it is to extend your editor. you can even convert your markdown document into a LibreOffice/Word document with actual live Zotero references as if you had entered them into Zotero all along (see below)  Use CSL, not bibtex with pandoc Many tutorials on the use of pandoc to generate documents with citations seem to use bibtex as a bibliography format.</description>
    </item>
    
    <item>
      <title>Pull export</title>
      <link>/zotero-better-bibtex/exporting/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/pull/</guid>
      <description>You can fetch your bibliography on the url http://127.0.0.1:23119/better-bibtex/collection?[collectionID].[format] 1. You can get this URL for a group, library or collection by right-clicking it and selecting Download Better BibTeX export...
You can add options to the export as URL parameters:
 &amp;amp;exportNotes=[true|false] &amp;amp;useJournalAbbreviation=[true|false]  You can fetch your library as part of your build, using something like curl from your Makefile, or with a BibLaTeX remote statement like
\addbibresource[location=remote]{http://127.0.0.1:23119/better-bibtex/collection?/0/8CV58ZVD.biblatex} format can be:</description>
    </item>
    
    <item>
      <title>Scripting</title>
      <link>/zotero-better-bibtex/exporting/scripting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/scripting/</guid>
      <description>You wanted customized&amp;hellip; You got customized. If you go into the Advanced tab of the Better BibTeX preferences you will find a text box (empty by default) where you can edit a javascript snippet which will be executed for each reference generated in the Bib(La)TeX exporter. In this code, you have access to the reference just before it will be written out and cached. There is an API to do this, and it&amp;rsquo;s fairly stable, but usually you can just open a new issue and ask me to write it, and I&amp;rsquo;ll add it here (it&amp;rsquo;s how the examples got here).</description>
    </item>
    
    <item>
      <title>Extra fields</title>
      <link>/zotero-better-bibtex/exporting/extra-fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/extra-fields/</guid>
      <description>In some cases the Zotero fields do not offer a place to enter the data you need to get your references just right. For this Zotero has a so-called &amp;ldquo;cheater syntax&amp;rdquo; which allows you to add extra &amp;ldquo;fields&amp;rdquo; as separate lines in the extra field all items in Zotero have. These fields are supported by the citation processor inside Zotero, and BBT understands them too, and adds one &amp;ldquo;cheater syntax of its own.</description>
    </item>
    
    <item>
      <title>Advanced</title>
      <link>/zotero-better-bibtex/exporting/advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/advanced/</guid>
      <description>You are a hardcore LaTeX user If you&amp;rsquo;d really just rather hand-code your LaTeX constructs, BBT makes that possible:
 You can add literal LaTeX anywhere in your reference by surrounding it with &amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt; (&amp;lt;pre&amp;gt;...&amp;lt;/pre&amp;gt; will also work for historical reasons) markers. BBT will convert to/from unicode and (un)escape where required but will pass whatever is enclosed in the pre tags unchanged. An entry tagged with #LaTeX (case-sensitive!) will have all fields exported as if they&amp;rsquo;re wrapped in &amp;lt;script&amp;gt;.</description>
    </item>
    
    <item>
      <title>JSON-RPC</title>
      <link>/zotero-better-bibtex/exporting/json-rpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zotero-better-bibtex/exporting/json-rpc/</guid>
      <description>You can call into BBT using JSON-RPC on the URL http://localhost:23119/better-bibtex/json-rpc . An example could look like:
curl http://localhost:23119/better-bibtex/json-rpc -X POST -H &amp;#34;Content-Type: application/json&amp;#34; -H &amp;#34;Accept: application/json&amp;#34; --data-binary &amp;#39;{&amp;#34;jsonrpc&amp;#34;: &amp;#34;2.0&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;collection.scanAUX&amp;#34;, &amp;#34;params&amp;#34;: [&amp;#34;/My Library/thesis/article1&amp;#34;, &amp;#34;/Users/phantom/Downloads/output.aux&amp;#34;] }&amp;#39; The available methods are:
autoexport.add(collection, translator, path, displayOptions, replace) Add an auto-export for the given collection. The target collection will be created if it does not exist
 collection: The forward-slash separated path to the collection.</description>
    </item>
    
  </channel>
</rss>
